package com.epam.jmp.classloader;

import java.io.IOException;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;

/**
 * @author Alexander Semenkevich
 * 
 * Write your own StatelessClassLoader 
 * which will load only stateless classes (without fields) 
 * from .jar file specified as input parameter ().
 * Don’t forget provide test code.
 */
public class StatelessClassLoader extends ClassLoader {

	private String jarPath;
	
	public StatelessClassLoader(String jarPath) {
		this.jarPath = jarPath;
	}
	
	protected Class<?> findClass(String name) throws ClassNotFoundException {
		Class<?> clazz = loadClassFormJar(name);
		if (isStateless(clazz)) {
			return clazz;
		} else {
			throw new ClassNotFoundException(name);
		}
	}
	
	private Class<?> loadClassFormJar(String name) throws ClassNotFoundException {
		try {
			JarFile jf = new JarFile(jarPath);
			JarEntry entry = jf.getJarEntry(name);
			jf.close();
		} catch (IOException e) {
			throw new ClassNotFoundException(name, e);
		}
	}
	
	private boolean isStateless(Class<?> clazz) {
		return clazz.getDeclaredFields().length == 0;
	}
	
}
